###Получить информацию о сервисе user-service
GET http://localhost:8082/api/v1/user/get-description

###Получение списка всех пользователей (информация о компании должна подтягиваться синхронное из company-service)
GET http://localhost:8082/api/v1/user/get-users

###Создание пользователя
#(должна быть синхронная проверка из company-service, на существование компании.
#Если компании не существует - кидать 404 ошибку с соответствующим сообщением)
POST http://localhost:8082/api/v1/user/create-user
Content-Type: application/json

{
  "name": "Test User 2",
  "login": "22222",
  "password": "222222",
  "email": "user2@gmail.com",
  "companyId": 1
}

###Активация/деактивация пользователя. Параметры: 1. id; 2. enabled
PUT http://localhost:8082/api/v1/user/update-enabled-user/2/false

###Обновление информации о пользователе. Параметры: 1. id
#(только имя, емэйл и компанию, для компании должна быть проверка см. выше)
PUT http://localhost:8082/api/v1/user/update-user/2
Content-Type: application/json

{
  "name": "Test User User2",
  "email": "useruser2@gmail.com",
  "companyId": 1
}

###Проверка существования пользователя по идентификатору
#(если пользователь существует, но неактивен – тоже кидаем 404 ошибку)
GET http://localhost:8082/api/v1/user/exist-user/2

###Получение информации о пользователе. Параметры: 1. id
GET http://localhost:8082/api/v1/user/get-user/2
